---

- name: check if apt-key command exists
  command: which apt-key
  register: apt_key_exists
  failed_when: false
  changed_when: false

- name: install New Relic Infra Repo APT key (legacy method for older Debian)
  apt_key:
    url: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
  when: apt_key_exists.rc == 0

- name: create keyrings directory (modern method for newer Debian)
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when: apt_key_exists.rc != 0

- name: download New Relic Infra Repo GPG key (modern method for newer Debian)
  get_url:
    url: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
    dest: /etc/apt/keyrings/newrelic-infra.gpg
    mode: '0644'
  when: apt_key_exists.rc != 0

- name: remove New Relic Infra APT repository (from previous runs)
  apt_repository:
    filename: "{{ repo_name }}"
    repo: "deb {{ item }}/linux/apt {{ ansible_distribution_release }} main"
    state: absent
  loop: "{{ repos_to_clean }}"

- name: remove old New Relic Infra APT repository with signed-by (from previous runs)
  apt_repository:
    filename: "{{ repo_name }}"
    repo: "deb [signed-by=/etc/apt/keyrings/newrelic-infra.gpg] {{ item }}/linux/apt {{ ansible_distribution_release }} main"
    state: absent
  loop: "{{ repos_to_clean }}"
  when: apt_key_exists.rc != 0

- name: install New Relic Infra APT repository (legacy method)
  apt_repository:
    repo: "deb {{ repo_endpoint }}/linux/apt {{ ansible_distribution_release }} main"
    filename: "{{ repo_name }}"
  when: apt_key_exists.rc == 0

- name: install New Relic Infra APT repository (modern method)
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/newrelic-infra.gpg] {{ repo_endpoint }}/linux/apt {{ ansible_distribution_release }} main"
    filename: "{{ repo_name }}"
  when: apt_key_exists.rc != 0

...
